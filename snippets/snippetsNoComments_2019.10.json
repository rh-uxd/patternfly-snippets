{

	"AboutModal": 
    {
      "prefix": "!AboutModal",
      "body": [
        "<AboutModal",
				"\tclassName={${1:\"''\"}}",
				"\tisOpen={${2:false}}",
				"\tonClose={${3:(): any => undefined}}",
				"\tproductName={${4:\"''\"}}",
				"\ttrademark={${5:\"''\"}}",
				"\tbrandImageSrc={${6:\"string\"}}",
				"\tbrandImageAlt={${7:\"string\"}}",
				"\tbackgroundImageSrc={${8:\"''\"}}",
				"\tnoAboutModalBoxContentContainer={${9:false}}",
				"\tappendTo={${10:null}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</AboutModal>"
      ],
      "description": "AboutModal"
    }
  ,
	"AboutModalBox": 
    {
      "prefix": "!AboutModalBox",
      "body": [
        "<AboutModalBox",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</AboutModalBox>"
      ],
      "description": "AboutModalBox"
    }
  ,
	"AboutModalBoxBrand": 
    {
      "prefix": "!AboutModalBoxBrand",
      "body": [
        "<AboutModalBoxBrand",
				"\tclassName={${1:\"''\"}}",
				"\tsrc={${2:\"''\"}}",
				"\talt={${3:\"string\"}}",
				"/>"
      ],
      "description": "AboutModalBoxBrand"
    }
  ,
	"AboutModalBoxCloseButton": 
    {
      "prefix": "!AboutModalBoxCloseButton",
      "body": [
        "<AboutModalBoxCloseButton",
				"\tclassName={${1:\"''\"}}",
				"\tonClose={${2:() => undefined as any}}",
				"/>"
      ],
      "description": "AboutModalBoxCloseButton"
    }
  ,
	"AboutModalBoxContent": 
    {
      "prefix": "!AboutModalBoxContent",
      "body": [
        "<AboutModalBoxContent",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"string\"}}",
				"\ttrademark={${3:\"string\"}}",
				"\tnoAboutModalBoxContentContainer={${4:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</AboutModalBoxContent>"
      ],
      "description": "AboutModalBoxContent"
    }
  ,
	"AboutModalBoxHeader": 
    {
      "prefix": "!AboutModalBoxHeader",
      "body": [
        "<AboutModalBoxHeader",
				"\tclassName={${1:\"''\"}}",
				"\tproductName={${2:\"''\"}}",
				"\tid={${3:\"string\"}}",
				"/>"
      ],
      "description": "AboutModalBoxHeader"
    }
  ,
	"AboutModalBoxHero": 
    {
      "prefix": "!AboutModalBoxHero",
      "body": [
        "<AboutModalBoxHero",
				"\tclassName={${1:\"string\"}}",
				"\tbackgroundImageSrc={${2:\"string\"}}",
				"/>"
      ],
      "description": "AboutModalBoxHero"
    }
  ,
	"AboutModalContainer": 
    {
      "prefix": "!AboutModalContainer",
      "body": [
        "<AboutModalContainer",
				"\tclassName={${1:\"''\"}}",
				"\tisOpen={${2:false}}",
				"\tonClose={${3:() => undefined}}",
				"\tproductName={${4:\"''\"}}",
				"\ttrademark={${5:\"string\"}}",
				"\tbrandImageSrc={${6:\"string\"}}",
				"\tbrandImageAlt={${7:\"string\"}}",
				"\tbackgroundImageSrc={${8:\"string\"}}",
				"\tariaLabelledbyId={${9:\"string\"}}",
				"\tariaDescribedById={${10:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</AboutModalContainer>"
      ],
      "description": "AboutModalContainer"
    }
  ,
	"Accordion": 
    {
      "prefix": "!Accordion",
      "body": [
        "<Accordion",
				"\tclassName={${1:\"''\"}}",
				"\taria-label={${2:\"''\"}}",
				"\theadingLevel={${3:'h3'}}",
				"\tasDefinitionList={${4:true}}",
				"\tnoBoxShadow={${5:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Accordion>"
      ],
      "description": "Accordion"
    }
  ,
	"AccordionContent": 
    {
      "prefix": "!AccordionContent",
      "body": [
        "<AccordionContent",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"''\"}}",
				"\tisHidden={${3:false}}",
				"\tisFixed={${4:false}}",
				"\taria-label={${5:\"''\"}}",
				"\tcomponent={${6:() => <div />}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</AccordionContent>"
      ],
      "description": "AccordionContent"
    }
  ,
	"AccordionItem": 
    {
      "prefix": "!AccordionItem",
      "body": [
        "<AccordionItem",
				"",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</AccordionItem>"
      ],
      "description": "AccordionItem"
    }
  ,
	"AccordionToggle": 
    {
      "prefix": "!AccordionToggle",
      "body": [
        "<AccordionToggle",
				"\tclassName={${1:\"''\"}}",
				"\tisExpanded={${2:false}}",
				"\tid={${3:\"string\"}}",
				"\tcomponent={${4:() => <div />}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</AccordionToggle>"
      ],
      "description": "AccordionToggle"
    }
  ,
	"Alert": 
    {
      "prefix": "!Alert",
      "body": [
        "<Alert",
				"\tvariant={${1:'success'}}",
				"\tisInline={${2:false}}",
				"\ttitle={${3:<div>ReactNode</div>}}",
				"\taction={${4:null}}",
				"\tclassName={${5:\"''\"}}",
				"\taria-label={${6:\"string\"}}",
				"\tvariantLabel={${7:\"string\"}}",
				">",
				"\t{${0:''}}",
				"</Alert>"
      ],
      "description": "Alert"
    }
  ,
	"AlertActionCloseButton": 
    {
      "prefix": "!AlertActionCloseButton",
      "body": [
        "<AlertActionCloseButton",
				"\tclassName={${1:\"''\"}}",
				"\tonClose={${2:() => undefined as any}}",
				"\taria-label={${3:\"''\"}}",
				"\tvariantLabel={${4:\"''\"}}",
				"/>"
      ],
      "description": "AlertActionCloseButton"
    }
  ,
	"AlertActionLink": 
    {
      "prefix": "!AlertActionLink",
      "body": [
        "<AlertActionLink",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:\"''\"}}",
				"</AlertActionLink>"
      ],
      "description": "AlertActionLink"
    }
  ,
	"AlertIcon": 
    {
      "prefix": "!AlertIcon",
      "body": [
        "<AlertIcon",
				"\tvariant={${1:'success'}}",
				"\tclassName={${2:\"''\"}}",
				"/>"
      ],
      "description": "AlertIcon"
    }
  ,
	"ApplicationLauncher": 
    {
      "prefix": "!ApplicationLauncher",
      "body": [
        "<ApplicationLauncher",
				"\tclassName={${1:\"''\"}}",
				"\tdirection={${2:undefined}}",
				"\tdropdownItems={${3:[]}}",
				"\titems={${4:[]}}",
				"\tisDisabled={${5:false}}",
				"\tisOpen={${6:false}}",
				"\tposition={${7:undefined}}",
				"\tonSelect={${8:(_event: any): any => undefined}}",
				"\tonToggle={${9:(_value: boolean): any => undefined}}",
				"\taria-label={${10:\"'Application launcher'\"}}",
				"\tisGrouped={${11:false}}",
				"\ttoggleIcon={${12:<div>ReactNode</div>}}",
				"/>"
      ],
      "description": "ApplicationLauncher"
    }
  ,
	"ApplicationLauncherContent": 
    {
      "prefix": "!ApplicationLauncherContent",
      "body": [
        "<ApplicationLauncherContent",
				"",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ApplicationLauncherContent>"
      ],
      "description": "ApplicationLauncherContent"
    }
  ,
	"ApplicationLauncherGroup": 
    {
      "prefix": "!ApplicationLauncherGroup",
      "body": [
        "<ApplicationLauncherGroup",
				"",
				"/>"
      ],
      "description": "ApplicationLauncherGroup"
    }
  ,
	"ApplicationLauncherIcon": 
    {
      "prefix": "!ApplicationLauncherIcon",
      "body": [
        "<ApplicationLauncherIcon",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ApplicationLauncherIcon>"
      ],
      "description": "ApplicationLauncherIcon"
    }
  ,
	"ApplicationLauncherSeparator": 
    {
      "prefix": "!ApplicationLauncherSeparator",
      "body": [
        "<ApplicationLauncherSeparator",
				"",
				"/>"
      ],
      "description": "ApplicationLauncherSeparator"
    }
  ,
	"ApplicationLauncherText": 
    {
      "prefix": "!ApplicationLauncherText",
      "body": [
        "<ApplicationLauncherText",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ApplicationLauncherText>"
      ],
      "description": "ApplicationLauncherText"
    }
  ,
	"Avatar": 
    {
      "prefix": "!Avatar",
      "body": [
        "<Avatar",
				"\tclassName={${1:\"''\"}}",
				"\tsrc={${2:\"''\"}}",
				"\talt={${3:\"string\"}}",
				"/>"
      ],
      "description": "Avatar"
    }
  ,
	"Backdrop": 
    {
      "prefix": "!Backdrop",
      "body": [
        "<Backdrop",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Backdrop>"
      ],
      "description": "Backdrop"
    }
  ,
	"BackgroundImage": 
    {
      "prefix": "!BackgroundImage",
      "body": [
        "<BackgroundImage",
				"\tclassName={${1:\"''\"}}",
				"\tsrc={${2:'string'}}",
				"/>"
      ],
      "description": "BackgroundImage"
    }
  ,
	"Badge": 
    {
      "prefix": "!Badge",
      "body": [
        "<Badge",
				"\tisRead={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:''}}",
				"</Badge>"
      ],
      "description": "Badge"
    }
  ,
	"Breadcrumb": 
    {
      "prefix": "!Breadcrumb",
      "body": [
        "<Breadcrumb",
				"\tclassName={${1:\"''\"}}",
				"\taria-label={${2:\"'Breadcrumb'\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Breadcrumb>"
      ],
      "description": "Breadcrumb"
    }
  ,
	"BreadcrumbHeading": 
    {
      "prefix": "!BreadcrumbHeading",
      "body": [
        "<BreadcrumbHeading",
				"\tclassName={${1:\"''\"}}",
				"\tto={${2:\"null\"}}",
				"\ttarget={${3:\"null\"}}",
				"\tcomponent={${4:'a'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</BreadcrumbHeading>"
      ],
      "description": "BreadcrumbHeading"
    }
  ,
	"BreadcrumbItem": 
    {
      "prefix": "!BreadcrumbItem",
      "body": [
        "<BreadcrumbItem",
				"\tclassName={${1:\"''\"}}",
				"\tto={${2:\"null\"}}",
				"\tisActive={${3:false}}",
				"\ttarget={${4:\"null\"}}",
				"\tcomponent={${5:'a'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</BreadcrumbItem>"
      ],
      "description": "BreadcrumbItem"
    }
  ,
	"Button": 
    {
      "prefix": "!Button",
      "body": [
        "<Button",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'button'}}",
				"\tisActive={${3:false}}",
				"\tisBlock={${4:false}}",
				"\tisDisabled={${5:false}}",
				"\tisFocus={${6:false}}",
				"\tisHover={${7:false}}",
				"\tisInline={${8:false}}",
				"\ttype={${9:'button'}}",
				"\tvariant={${10:'primary'}}",
				"\taria-label={${11:\"null\"}}",
				"\ticon={${12:null}}",
				"\ttabIndex={${13:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Button>"
      ],
      "description": "Button"
    }
  ,
	"Card": 
    {
      "prefix": "!Card",
      "body": [
        "<Card",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'article'}}",
				"\tisHoverable={${3:false}}",
				"\tisCompact={${4:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Card>"
      ],
      "description": "Card"
    }
  ,
	"CardActions": 
    {
      "prefix": "!CardActions",
      "body": [
        "<CardActions",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</CardActions>"
      ],
      "description": "CardActions"
    }
  ,
	"CardBody": 
    {
      "prefix": "!CardBody",
      "body": [
        "<CardBody",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'div'}}",
				"\tisFilled={${3:true}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</CardBody>"
      ],
      "description": "CardBody"
    }
  ,
	"CardFooter": 
    {
      "prefix": "!CardFooter",
      "body": [
        "<CardFooter",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'div'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</CardFooter>"
      ],
      "description": "CardFooter"
    }
  ,
	"CardHead": 
    {
      "prefix": "!CardHead",
      "body": [
        "<CardHead",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</CardHead>"
      ],
      "description": "CardHead"
    }
  ,
	"CardHeader": 
    {
      "prefix": "!CardHeader",
      "body": [
        "<CardHeader",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</CardHeader>"
      ],
      "description": "CardHeader"
    }
  ,
	"Checkbox": 
    {
      "prefix": "!Checkbox",
      "body": [
        "<Checkbox",
				"\tclassName={${1:\"''\"}}",
				"\tisValid={${2:true}}",
				"\tisDisabled={${3:false}}",
				"\tisChecked={${4:false}}",
				"\tchecked={${5:true}}",
				"\tonChange={${6:() => {}}}",
				"\tlabel={${7:<div>ReactNode</div>}}",
				"\tid={${8:\"string\"}}",
				"\taria-label={${9:\"string\"}}",
				"/>"
      ],
      "description": "Checkbox"
    }
  ,
	"Chip": 
    {
      "prefix": "!Chip",
      "body": [
        "<Chip",
				"\tcloseBtnAriaLabel={${1:\"'close'\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tisOverflowChip={${3:false}}",
				"\tisReadOnly={${4:false}}",
				"\tonClick={${5:(_e: React.MouseEvent) => undefined as any}}",
				"\tcomponent={${6:'div'}}",
				"\ttooltipPosition={${7:'top'}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Chip>"
      ],
      "description": "Chip"
    }
  ,
	"ChipButton": 
    {
      "prefix": "!ChipButton",
      "body": [
        "<ChipButton",
				"\tariaLabel={${1:\"'close'\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tonClick={${3:() => undefined}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ChipButton>"
      ],
      "description": "ChipButton"
    }
  ,
	"ChipGroup": 
    {
      "prefix": "!ChipGroup",
      "body": [
        "<ChipGroup",
				"\tclassName={${1:\"''\"}}",
				"\tdefaultIsOpen={${2:false}}",
				"\texpandedText={${3:\"'Show Less'\"}}",
				"\tcollapsedText={${4:\"'${remaining} more'\"}}",
				"\twithToolbar={${5:false}}",
				"\theadingLevel={${6:'h1'}}",
				"\tnumChips={${7:3}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ChipGroup>"
      ],
      "description": "ChipGroup"
    }
  ,
	"ChipGroupToolbarItem": 
    {
      "prefix": "!ChipGroupToolbarItem",
      "body": [
        "<ChipGroupToolbarItem",
				"\tcategoryName={${1:\"''\"}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ChipGroupToolbarItem>"
      ],
      "description": "ChipGroupToolbarItem"
    }
  ,
	"ClipboardCopy": 
    {
      "prefix": "!ClipboardCopy",
      "body": [
        "<ClipboardCopy",
				"\tclassName={${1:\"string\"}}",
				"\thoverTip={${2:\"'Copy to clipboard'\"}}",
				"\tclickTip={${3:\"'Successfully copied to clipboard!'\"}}",
				"\ttextAriaLabel={${4:\"'Copyable input'\"}}",
				"\ttoggleAriaLabel={${5:\"'Show content'\"}}",
				"\tisReadOnly={${6:false}}",
				"\tisExpanded={${7:false}}",
				"\tisCode={${8:false}}",
				"\tvariant={${9:'inline'}}",
				"\tposition={${10:undefined}}",
				"\tmaxWidth={${11:\"'150px'\"}}",
				"\texitDelay={${12:1600}}",
				"\tentryDelay={${13:100}}",
				"\tswitchDelay={${14:2000}}",
				"\tonCopy={${15:(event: any, text: string) => {",
				"  const clipboard = event.currentTarget.parentElement;",
				"  const el = document.createElement('input');",
				"  el.value = text;",
				"  clipboard.appendChild(el);",
				"  el.select();",
				"  document.execCommand('copy');",
				"  clipboard.removeChild(el);",
				"}}}",
				"\tonChange={${16:(): any => undefined}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ClipboardCopy>"
      ],
      "description": "ClipboardCopy"
    }
  ,
	"ClipboardCopyButton": 
    {
      "prefix": "!ClipboardCopyButton",
      "body": [
        "<ClipboardCopyButton",
				"\tonClick={${1:(event: React.MouseEvent) => undefined as void}}",
				"\tid={${2:\"string\"}}",
				"\ttextId={${3:\"string\"}}",
				"\tclassName={${4:\"''\"}}",
				"\texitDelay={${5:100}}",
				"\tentryDelay={${6:100}}",
				"\tmaxWidth={${7:\"'100px'\"}}",
				"\tposition={${8:'top'}}",
				"\taria-label={${9:\"'Copyable input'\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ClipboardCopyButton>"
      ],
      "description": "ClipboardCopyButton"
    }
  ,
	"ClipboardCopyExpanded": 
    {
      "prefix": "!ClipboardCopyExpanded",
      "body": [
        "<ClipboardCopyExpanded",
				"\tclassName={${1:\"''\"}}",
				"\tonChange={${2:(): any => undefined}}",
				"\tisReadOnly={${3:false}}",
				"\tisCode={${4:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ClipboardCopyExpanded>"
      ],
      "description": "ClipboardCopyExpanded"
    }
  ,
	"ClipboardCopyToggle": 
    {
      "prefix": "!ClipboardCopyToggle",
      "body": [
        "<ClipboardCopyToggle",
				"\tonClick={${1:(event: React.MouseEvent) => undefined as void}}",
				"\tid={${2:\"string\"}}",
				"\ttextId={${3:\"string\"}}",
				"\tcontentId={${4:\"string\"}}",
				"\tisExpanded={${5:false}}",
				"\tclassName={${6:\"''\"}}",
				"/>"
      ],
      "description": "ClipboardCopyToggle"
    }
  ,
	"ContextSelectorItem": 
    {
      "prefix": "!ContextSelectorItem",
      "body": [
        "<ContextSelectorItem",
				"\tclassName={${1:\"''\"}}",
				"\tisDisabled={${2:false}}",
				"\tisHovered={${3:false}}",
				"\tonClick={${4:(): any => undefined}}",
				"\tindex={${5:42}}",
				"\tsendRef={${6:(index: number, current: any) => undefined as void}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ContextSelectorItem>"
      ],
      "description": "ContextSelectorItem"
    }
  ,
	"ContextSelectorMenuList": 
    {
      "prefix": "!ContextSelectorMenuList",
      "body": [
        "<ContextSelectorMenuList",
				"\tclassName={${1:\"''\"}}",
				"\tisOpen={${2:true}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ContextSelectorMenuList>"
      ],
      "description": "ContextSelectorMenuList"
    }
  ,
	"ContextSelectorToggle": 
    {
      "prefix": "!ContextSelectorToggle",
      "body": [
        "<ContextSelectorToggle",
				"\tid={${1:\"string\"}}",
				"\tclassName={${2:\"''\"}}",
				"\ttoggleText={${3:\"''\"}}",
				"\tisOpen={${4:false}}",
				"\tonToggle={${5:(event: any, value: boolean) => undefined as any}}",
				"\tonEnter={${6:() => undefined as any}}",
				"\tparentRef={${7:null}}",
				"\tisFocused={${8:false}}",
				"\tisHovered={${9:false}}",
				"\tisActive={${10:false}}",
				"/>"
      ],
      "description": "ContextSelectorToggle"
    }
  ,
	"DataList": 
    {
      "prefix": "!DataList",
      "body": [
        "<DataList",
				"\tclassName={${1:\"''\"}}",
				"\taria-label={${2:\"string\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DataList>"
      ],
      "description": "DataList"
    }
  ,
	"DataListAction": 
    {
      "prefix": "!DataListAction",
      "body": [
        "<DataListAction",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"string\"}}",
				"\taria-labelledby={${3:\"string\"}}",
				"\taria-label={${4:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataListAction>"
      ],
      "description": "DataListAction"
    }
  ,
	"DataListCell": 
    {
      "prefix": "!DataListCell",
      "body": [
        "<DataListCell",
				"\tclassName={${1:\"''\"}}",
				"\twidth={${2:1}}",
				"\tisFilled={${3:true}}",
				"\talignRight={${4:false}}",
				"\tisIcon={${5:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DataListCell>"
      ],
      "description": "DataListCell"
    }
  ,
	"DataListCheck": 
    {
      "prefix": "!DataListCheck",
      "body": [
        "<DataListCheck",
				"\tclassName={${1:\"''\"}}",
				"\tisValid={${2:true}}",
				"\tisDisabled={${3:false}}",
				"\tisChecked={${4:null}}",
				"\tchecked={${5:null}}",
				"\tonChange={${6:(checked: boolean, event: React.FormEvent<HTMLInputElement>) => undefined as void}}",
				"\taria-labelledby={${7:\"string\"}}",
				"/>"
      ],
      "description": "DataListCheck"
    }
  ,
	"DataListContent": 
    {
      "prefix": "!DataListContent",
      "body": [
        "<DataListContent",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"''\"}}",
				"\trowid={${3:\"''\"}}",
				"\tisHidden={${4:false}}",
				"\tnoPadding={${5:false}}",
				"\taria-label={${6:\"string\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DataListContent>"
      ],
      "description": "DataListContent"
    }
  ,
	"DataListItem": 
    {
      "prefix": "!DataListItem",
      "body": [
        "<DataListItem",
				"\tisExpanded={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				"\taria-labelledby={${3:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataListItem>"
      ],
      "description": "DataListItem"
    }
  ,
	"DataListItemCells": 
    {
      "prefix": "!DataListItemCells",
      "body": [
        "<DataListItemCells",
				"\tclassName={${1:\"''\"}}",
				"\tdataListCells={${2:<div>ReactNode</div>}}",
				"\trowid={${3:\"''\"}}",
				"/>"
      ],
      "description": "DataListItemCells"
    }
  ,
	"DataListItemRow": 
    {
      "prefix": "!DataListItemRow",
      "body": [
        "<DataListItemRow",
				"\tclassName={${1:\"''\"}}",
				"\trowid={${2:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataListItemRow>"
      ],
      "description": "DataListItemRow"
    }
  ,
	"DataListToggle": 
    {
      "prefix": "!DataListToggle",
      "body": [
        "<DataListToggle",
				"\tclassName={${1:\"''\"}}",
				"\tisExpanded={${2:false}}",
				"\tid={${3:\"string\"}}",
				"\trowid={${4:\"''\"}}",
				"\taria-labelledby={${5:\"''\"}}",
				"\taria-label={${6:\"'Details'\"}}",
				"\taria-controls={${7:\"''\"}}",
				"/>"
      ],
      "description": "DataListToggle"
    }
  ,
	"Dropdown": 
    {
      "prefix": "!Dropdown",
      "body": [
        "<Dropdown",
				"\tclassName={${1:\"string\"}}",
				"\tdropdownItems={${2:[]}}",
				"\tisOpen={${3:true}}",
				"\tisPlain={${4:true}}",
				"\tposition={${5:'right'}}",
				"\tdirection={${6:'up'}}",
				"\tisGrouped={${7:true}}",
				"\ttoggle={${8:<p>ReactElement</p>}}",
				"\tautoFocus={${9:true}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Dropdown>"
      ],
      "description": "Dropdown"
    }
  ,
	"DropdownGroup": 
    {
      "prefix": "!DropdownGroup",
      "body": [
        "<DropdownGroup",
				"\tclassName={${1:\"''\"}}",
				"\tlabel={${2:''}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DropdownGroup>"
      ],
      "description": "DropdownGroup"
    }
  ,
	"DropdownItem": 
    {
      "prefix": "!DropdownItem",
      "body": [
        "<DropdownItem",
				"\tclassName={${1:\"''\"}}",
				"\tlistItemClassName={${2:\"string\"}}",
				"\tcomponent={${3:'a'}}",
				"\tvariant={${4:'item'}}",
				"\tisDisabled={${5:false}}",
				"\tisHovered={${6:false}}",
				"\thref={${7:\"''\"}}",
				"\ttooltip={${8:null}}",
				"\ttooltipProps={${9:undefined}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DropdownItem>"
      ],
      "description": "DropdownItem"
    }
  ,
	"DropdownItemIcon": 
    {
      "prefix": "!DropdownItemIcon",
      "body": [
        "<DropdownItemIcon",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DropdownItemIcon>"
      ],
      "description": "DropdownItemIcon"
    }
  ,
	"DropdownMenu": 
    {
      "prefix": "!DropdownMenu",
      "body": [
        "<DropdownMenu",
				"\tclassName={${1:\"''\"}}",
				"\tisOpen={${2:true}}",
				"\topenedOnEnter={${3:false}}",
				"\tautoFocus={${4:true}}",
				"\tcomponent={${5:'ul'}}",
				"\tposition={${6:'right'}}",
				"\tisGrouped={${7:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DropdownMenu>"
      ],
      "description": "DropdownMenu"
    }
  ,
	"DropdownToggle": 
    {
      "prefix": "!DropdownToggle",
      "body": [
        "<DropdownToggle",
				"\tid={${1:\"''\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tisOpen={${3:false}}",
				"\tonToggle={${4:(_isOpen: boolean) => undefined as any}}",
				"\tparentRef={${5:null}}",
				"\tisFocused={${6:false}}",
				"\tisHovered={${7:false}}",
				"\tisActive={${8:false}}",
				"\tisPlain={${9:false}}",
				"\tisDisabled={${10:false}}",
				"\tisPrimary={${11:false}}",
				"\ticonComponent={${12:() => <p>ReactElementType</p>}}",
				"\tsplitButtonItems={${13:[]}}",
				"\tsplitButtonVariant={${14:'checkbox'}}",
				"\taria-label={${15:\"string\"}}",
				"\tariaHasPopup={${16:true}}",
				"\ttype={${17:'button'}}",
				"\tonEnter={${18:(event?: React.MouseEvent<HTMLButtonElement>) => undefined as void}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</DropdownToggle>"
      ],
      "description": "DropdownToggle"
    }
  ,
	"KebabToggle": 
    {
      "prefix": "!KebabToggle",
      "body": [
        "<KebabToggle",
				"\tid={${1:\"''\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tisOpen={${3:false}}",
				"\taria-label={${4:\"'Actions'\"}}",
				"\tonToggle={${5:() => undefined as void}}",
				"\tparentRef={${6:null}}",
				"\tisFocused={${7:false}}",
				"\tisHovered={${8:false}}",
				"\tisActive={${9:false}}",
				"\tisDisabled={${10:false}}",
				"\tisPlain={${11:false}}",
				"\ttype={${12:'button'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</KebabToggle>"
      ],
      "description": "KebabToggle"
    }
  ,
	"Separator": 
    {
      "prefix": "!Separator",
      "body": [
        "<Separator",
				"\tclassName={${1:\"''\"}}",
				"\tonClick={${2:(event: React.MouseEvent<HTMLAnchorElement> | React.KeyboardEvent | MouseEvent) => undefined as void}}",
				"/>"
      ],
      "description": "Separator"
    }
  ,
	"Toggle": 
    {
      "prefix": "!Toggle",
      "body": [
        "<Toggle",
				"\tid={${1:\"string\"}}",
				"\ttype={${2:'button'}}",
				"\tclassName={${3:\"''\"}}",
				"\tisOpen={${4:false}}",
				"\tonToggle={${5:(",
				"  isOpen: boolean,",
				"  event: MouseEvent | TouchEvent | KeyboardEvent | React.KeyboardEvent<any> | React.MouseEvent<HTMLButtonElement>",
				") => undefined as void}}",
				"\tonEnter={${6:() => undefined as void}}",
				"\tparentRef={${7:'any'}}",
				"\tisFocused={${8:false}}",
				"\tisHovered={${9:false}}",
				"\tisActive={${10:false}}",
				"\tisDisabled={${11:false}}",
				"\tisPlain={${12:false}}",
				"\tisPrimary={${13:false}}",
				"\tisSplitButton={${14:false}}",
				"\tariaHasPopup={${15:true}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Toggle>"
      ],
      "description": "Toggle"
    }
  ,
	"EmptyState": 
    {
      "prefix": "!EmptyState",
      "body": [
        "<EmptyState",
				"\tclassName={${1:\"''\"}}",
				"\tvariant={${2:'small'}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</EmptyState>"
      ],
      "description": "EmptyState"
    }
  ,
	"EmptyStateBody": 
    {
      "prefix": "!EmptyStateBody",
      "body": [
        "<EmptyStateBody",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</EmptyStateBody>"
      ],
      "description": "EmptyStateBody"
    }
  ,
	"EmptyStateIcon": 
    {
      "prefix": "!EmptyStateIcon",
      "body": [
        "<EmptyStateIcon",
				"\tcolor={${1:\"string\"}}",
				"\tsize={${2:'sm'}}",
				"\ttitle={${3:\"string\"}}",
				"\tclassName={${4:\"''\"}}",
				"\ticon={${5:null}}",
				"\tcomponent={${6:null}}",
				"\tvariant={${7:'icon'}}",
				"/>"
      ],
      "description": "EmptyStateIcon"
    }
  ,
	"EmptyStatePrimary": 
    {
      "prefix": "!EmptyStatePrimary",
      "body": [
        "<EmptyStatePrimary",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</EmptyStatePrimary>"
      ],
      "description": "EmptyStatePrimary"
    }
  ,
	"EmptyStateSecondaryActions": 
    {
      "prefix": "!EmptyStateSecondaryActions",
      "body": [
        "<EmptyStateSecondaryActions",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</EmptyStateSecondaryActions>"
      ],
      "description": "EmptyStateSecondaryActions"
    }
  ,
	"Expandable": 
    {
      "prefix": "!Expandable",
      "body": [
        "<Expandable",
				"\tclassName={${1:\"''\"}}",
				"\tisExpanded={${2:true}}",
				"\ttoggleText={${3:\"''\"}}",
				"\ttoggleTextExpanded={${4:\"''\"}}",
				"\ttoggleTextCollapsed={${5:\"''\"}}",
				"\tonToggle={${6:(): any => undefined}}",
				"\tisFocused={${7:false}}",
				"\tisHovered={${8:false}}",
				"\tisActive={${9:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Expandable>"
      ],
      "description": "Expandable"
    }
  ,
	"ActionGroup": 
    {
      "prefix": "!ActionGroup",
      "body": [
        "<ActionGroup",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ActionGroup>"
      ],
      "description": "ActionGroup"
    }
  ,
	"Form": 
    {
      "prefix": "!Form",
      "body": [
        "<Form",
				"\tclassName={${1:\"''\"}}",
				"\tisHorizontal={${2:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Form>"
      ],
      "description": "Form"
    }
  ,
	"FormGroup": 
    {
      "prefix": "!FormGroup",
      "body": [
        "<FormGroup",
				"\tclassName={${1:\"''\"}}",
				"\tlabel={${2:<div>ReactNode</div>}}",
				"\tisRequired={${3:false}}",
				"\tisValid={${4:true}}",
				"\tvalidated={${5:'default'}}",
				"\tisInline={${6:false}}",
				"\thelperText={${7:<div>ReactNode</div>}}",
				"\thelperTextInvalid={${8:<div>ReactNode</div>}}",
				"\tfieldId={${9:\"string\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</FormGroup>"
      ],
      "description": "FormGroup"
    }
  ,
	"FormHelperText": 
    {
      "prefix": "!FormHelperText",
      "body": [
        "<FormHelperText",
				"\tisError={${1:false}}",
				"\tisHidden={${2:true}}",
				"\tclassName={${3:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</FormHelperText>"
      ],
      "description": "FormHelperText"
    }
  ,
	"FormSelect": 
    {
      "prefix": "!FormSelect",
      "body": [
        "<FormSelect",
				"\tclassName={${1:\"''\"}}",
				"\tvalue={${2:''}}",
				"\tisValid={${3:true}}",
				"\tvalidated={${4:'default'}}",
				"\tisDisabled={${5:false}}",
				"\tisRequired={${6:false}}",
				"\tonBlur={${7:(): any => undefined}}",
				"\tonFocus={${8:(): any => undefined}}",
				"\tonChange={${9:(): any => undefined}}",
				"\taria-label={${10:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</FormSelect>"
      ],
      "description": "FormSelect"
    }
  ,
	"FormSelectOption": 
    {
      "prefix": "!FormSelectOption",
      "body": [
        "<FormSelectOption",
				"\tclassName={${1:\"''\"}}",
				"\tvalue={${2:''}}",
				"\tlabel={${3:\"string\"}}",
				"\tisDisabled={${4:false}}",
				"/>"
      ],
      "description": "FormSelectOption"
    }
  ,
	"FormSelectOptionGroup": 
    {
      "prefix": "!FormSelectOptionGroup",
      "body": [
        "<FormSelectOptionGroup",
				"\tclassName={${1:\"''\"}}",
				"\tlabel={${2:\"string\"}}",
				"\tisDisabled={${3:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</FormSelectOptionGroup>"
      ],
      "description": "FormSelectOptionGroup"
    }
  ,
	"InputGroup": 
    {
      "prefix": "!InputGroup",
      "body": [
        "<InputGroup",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</InputGroup>"
      ],
      "description": "InputGroup"
    }
  ,
	"InputGroupText": 
    {
      "prefix": "!InputGroupText",
      "body": [
        "<InputGroupText",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'span'}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</InputGroupText>"
      ],
      "description": "InputGroupText"
    }
  ,
	"Login": 
    {
      "prefix": "!Login",
      "body": [
        "<Login",
				"\tclassName={${1:\"''\"}}",
				"\tfooter={${2:null}}",
				"\theader={${3:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Login>"
      ],
      "description": "Login"
    }
  ,
	"LoginFooter": 
    {
      "prefix": "!LoginFooter",
      "body": [
        "<LoginFooter",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginFooter>"
      ],
      "description": "LoginFooter"
    }
  ,
	"LoginFooterItem": 
    {
      "prefix": "!LoginFooterItem",
      "body": [
        "<LoginFooterItem",
				"\tclassName={${1:\"''\"}}",
				"\thref={${2:\"'#'\"}}",
				"\ttarget={${3:\"'_blank'\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginFooterItem>"
      ],
      "description": "LoginFooterItem"
    }
  ,
	"LoginForm": 
    {
      "prefix": "!LoginForm",
      "body": [
        "<LoginForm",
				"\tnoAutoFocus={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				"\tshowHelperText={${3:false}}",
				"\thelperText={${4:null}}",
				"\tusernameLabel={${5:\"'Username'\"}}",
				"\tusernameValue={${6:\"''\"}}",
				"\tonChangeUsername={${7:() => undefined as any}}",
				"\tisValidUsername={${8:true}}",
				"\tpasswordLabel={${9:\"'Password'\"}}",
				"\tpasswordValue={${10:\"''\"}}",
				"\tonChangePassword={${11:() => undefined as any}}",
				"\tisValidPassword={${12:true}}",
				"\tloginButtonLabel={${13:\"'Log In'\"}}",
				"\tisLoginButtonDisabled={${14:false}}",
				"\tonLoginButtonClick={${15:() => undefined as any}}",
				"\trememberMeLabel={${16:\"''\"}}",
				"\tisRememberMeChecked={${17:false}}",
				"\tonChangeRememberMe={${18:() => undefined as any}}",
				"\trememberMeAriaLabel={${19:\"''\"}}",
				"/>"
      ],
      "description": "LoginForm"
    }
  ,
	"LoginHeader": 
    {
      "prefix": "!LoginHeader",
      "body": [
        "<LoginHeader",
				"\tclassName={${1:\"''\"}}",
				"\theaderBrand={${2:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginHeader>"
      ],
      "description": "LoginHeader"
    }
  ,
	"LoginMainBody": 
    {
      "prefix": "!LoginMainBody",
      "body": [
        "<LoginMainBody",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginMainBody>"
      ],
      "description": "LoginMainBody"
    }
  ,
	"LoginMainFooter": 
    {
      "prefix": "!LoginMainFooter",
      "body": [
        "<LoginMainFooter",
				"\tclassName={${1:\"''\"}}",
				"\tsocialMediaLoginContent={${2:null}}",
				"\tsignUpForAccountMessage={${3:null}}",
				"\tforgotCredentials={${4:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginMainFooter>"
      ],
      "description": "LoginMainFooter"
    }
  ,
	"LoginMainFooterBandItem": 
    {
      "prefix": "!LoginMainFooterBandItem",
      "body": [
        "<LoginMainFooterBandItem",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginMainFooterBandItem>"
      ],
      "description": "LoginMainFooterBandItem"
    }
  ,
	"LoginMainFooterLinksItem": 
    {
      "prefix": "!LoginMainFooterLinksItem",
      "body": [
        "<LoginMainFooterLinksItem",
				"\thref={${1:\"''\"}}",
				"\ttarget={${2:\"''\"}}",
				"\tclassName={${3:\"''\"}}",
				"\tlinkComponent={${4:'a'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginMainFooterLinksItem>"
      ],
      "description": "LoginMainFooterLinksItem"
    }
  ,
	"LoginMainHeader": 
    {
      "prefix": "!LoginMainHeader",
      "body": [
        "<LoginMainHeader",
				"\tclassName={${1:\"''\"}}",
				"\ttitle={${2:\"''\"}}",
				"\tsubtitle={${3:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginMainHeader>"
      ],
      "description": "LoginMainHeader"
    }
  ,
	"LoginPage": 
    {
      "prefix": "!LoginPage",
      "body": [
        "<LoginPage",
				"\tclassName={${1:\"''\"}}",
				"\tbrandImgSrc={${2:\"''\"}}",
				"\tbrandImgAlt={${3:\"''\"}}",
				"\tbackgroundImgSrc={${4:''}}",
				"\tbackgroundImgAlt={${5:\"''\"}}",
				"\ttextContent={${6:\"''\"}}",
				"\tfooterListItems={${7:null}}",
				"\tfooterListVariants={${8:() => {}}}",
				"\tloginTitle={${9:\"string\"}}",
				"\tloginSubtitle={${10:\"string\"}}",
				"\tsignUpForAccountMessage={${11:null}}",
				"\tforgotCredentials={${12:null}}",
				"\tsocialMediaLoginContent={${13:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LoginPage>"
      ],
      "description": "LoginPage"
    }
  ,
	"Modal": 
    {
      "prefix": "!Modal",
      "body": [
        "<Modal",
				"\tclassName={${1:\"''\"}}",
				"\tisOpen={${2:false}}",
				"\theader={${3:<div>ReactNode</div>}}",
				"\ttitle={${4:\"string\"}}",
				"\thideTitle={${5:false}}",
				"\tshowClose={${6:true}}",
				"\tariaDescribedById={${7:\"''\"}}",
				"\tfooter={${8:<div>ReactNode</div>}}",
				"\tactions={${9:[]}}",
				"\tisFooterLeftAligned={${10:false}}",
				"\tonClose={${11:() => undefined as any}}",
				"\twidth={${12:1}}",
				"\tisLarge={${13:false}}",
				"\tisSmall={${14:false}}",
				"\tappendTo={${15:(typeof document !== 'undefined' && document.body) || null}}",
				"\tdisableFocusTrap={${16:true}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Modal>"
      ],
      "description": "Modal"
    }
  ,
	"ModalBox": 
    {
      "prefix": "!ModalBox",
      "body": [
        "<ModalBox",
				"\tclassName={${1:\"''\"}}",
				"\tisLarge={${2:false}}",
				"\tisSmall={${3:false}}",
				"\ttitle={${4:\"string\"}}",
				"\tid={${5:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ModalBox>"
      ],
      "description": "ModalBox"
    }
  ,
	"ModalBoxBody": 
    {
      "prefix": "!ModalBoxBody",
      "body": [
        "<ModalBoxBody",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ModalBoxBody>"
      ],
      "description": "ModalBoxBody"
    }
  ,
	"ModalBoxCloseButton": 
    {
      "prefix": "!ModalBoxCloseButton",
      "body": [
        "<ModalBoxCloseButton",
				"\tclassName={${1:\"''\"}}",
				"\tonClose={${2:() => undefined as any}}",
				"/>"
      ],
      "description": "ModalBoxCloseButton"
    }
  ,
	"ModalBoxFooter": 
    {
      "prefix": "!ModalBoxFooter",
      "body": [
        "<ModalBoxFooter",
				"\tclassName={${1:\"''\"}}",
				"\tisLeftAligned={${2:false}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ModalBoxFooter>"
      ],
      "description": "ModalBoxFooter"
    }
  ,
	"ModalBoxHeader": 
    {
      "prefix": "!ModalBoxHeader",
      "body": [
        "<ModalBoxHeader",
				"\tclassName={${1:\"''\"}}",
				"\thideTitle={${2:false}}",
				"\theadingLevel={${3:'h1'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ModalBoxHeader>"
      ],
      "description": "ModalBoxHeader"
    }
  ,
	"ModalContent": 
    {
      "prefix": "!ModalContent",
      "body": [
        "<ModalContent",
				"\tclassName={${1:\"''\"}}",
				"\tisLarge={${2:false}}",
				"\tisSmall={${3:false}}",
				"\tisOpen={${4:false}}",
				"\theader={${5:null}}",
				"\ttitle={${6:\"string\"}}",
				"\thideTitle={${7:false}}",
				"\tshowClose={${8:true}}",
				"\twidth={${9:-1}}",
				"\tfooter={${10:null}}",
				"\tactions={${11:[]}}",
				"\tisFooterLeftAligned={${12:false}}",
				"\tonClose={${13:() => undefined as any}}",
				"\tariaDescribedById={${14:\"''\"}}",
				"\tid={${15:\"''\"}}",
				"\tdisableFocusTrap={${16:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</ModalContent>"
      ],
      "description": "ModalContent"
    }
  ,
	"Nav": 
    {
      "prefix": "!Nav",
      "body": [
        "<Nav",
				"\tclassName={${1:\"''\"}}",
				"\tonSelect={${2:() => undefined}}",
				"\tonToggle={${3:() => undefined}}",
				"\taria-label={${4:\"''\"}}",
				"\ttheme={${5:'light'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Nav>"
      ],
      "description": "Nav"
    }
  ,
	"NavExpandable": 
    {
      "prefix": "!NavExpandable",
      "body": [
        "<NavExpandable",
				"\ttitle={${1:\"string\"}}",
				"\tsrText={${2:\"''\"}}",
				"\tisExpanded={${3:false}}",
				"\tclassName={${4:\"''\"}}",
				"\tgroupId={${5:null}}",
				"\tisActive={${6:false}}",
				"\tid={${7:\"''\"}}",
				"\tonExpand={${8:(e: React.MouseEvent<HTMLLIElement, MouseEvent>, val: boolean) => undefined as void}}",
				">",
				"\t{${0:''}}",
				"</NavExpandable>"
      ],
      "description": "NavExpandable"
    }
  ,
	"NavGroup": 
    {
      "prefix": "!NavGroup",
      "body": [
        "<NavGroup",
				"\ttitle={${1:\"string\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tid={${3:\"string\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</NavGroup>"
      ],
      "description": "NavGroup"
    }
  ,
	"NavItem": 
    {
      "prefix": "!NavItem",
      "body": [
        "<NavItem",
				"\tclassName={${1:\"''\"}}",
				"\tto={${2:\"''\"}}",
				"\tisActive={${3:false}}",
				"\tgroupId={${4:null}}",
				"\titemId={${5:null}}",
				"\tpreventDefault={${6:false}}",
				"\tonClick={${7:null}}",
				"\tcomponent={${8:'a'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</NavItem>"
      ],
      "description": "NavItem"
    }
  ,
	"NavList": 
    {
      "prefix": "!NavList",
      "body": [
        "<NavList",
				"\tclassName={${1:\"''\"}}",
				"\tvariant={${2:'default'}}",
				"\tariaLeftScroll={${3:\"'Scroll left'\"}}",
				"\tariaRightScroll={${4:\"'Scroll right'\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</NavList>"
      ],
      "description": "NavList"
    }
  ,
	"NotificationBadge": 
    {
      "prefix": "!NotificationBadge",
      "body": [
        "<NotificationBadge",
				"\tisRead={${1:false}}",
				"\tclassName={${2:\"string\"}}",
				"\taria-label={${3:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</NotificationBadge>"
      ],
      "description": "NotificationBadge"
    }
  ,
	"OptionsMenu": 
    {
      "prefix": "!OptionsMenu",
      "body": [
        "<OptionsMenu",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"string\"}}",
				"\tmenuItems={${3:[]}}",
				"\ttoggle={${4:<p>ReactElement</p>}}",
				"\tisPlain={${5:true}}",
				"\tisOpen={${6:true}}",
				"\tisText={${7:false}}",
				"\tisGrouped={${8:false}}",
				"\tariaLabelMenu={${9:\"string\"}}",
				"\tposition={${10:'right'}}",
				"\tdirection={${11:'up'}}",
				"/>"
      ],
      "description": "OptionsMenu"
    }
  ,
	"OptionsMenuItem": 
    {
      "prefix": "!OptionsMenuItem",
      "body": [
        "<OptionsMenuItem",
				"\tclassName={${1:\"string\"}}",
				"\tisSelected={${2:false}}",
				"\tisDisabled={${3:true}}",
				"\tonSelect={${4:() => null as any}}",
				"\tid={${5:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</OptionsMenuItem>"
      ],
      "description": "OptionsMenuItem"
    }
  ,
	"OptionsMenuItemGroup": 
    {
      "prefix": "!OptionsMenuItemGroup",
      "body": [
        "<OptionsMenuItemGroup",
				"\tclassName={${1:\"''\"}}",
				"\tariaLabel={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</OptionsMenuItemGroup>"
      ],
      "description": "OptionsMenuItemGroup"
    }
  ,
	"OptionsMenuSeparator": 
    {
      "prefix": "!OptionsMenuSeparator",
      "body": [
        "<OptionsMenuSeparator",
				"\tclassName={${1:\"''\"}}",
				"/>"
      ],
      "description": "OptionsMenuSeparator"
    }
  ,
	"OptionsMenuToggle": 
    {
      "prefix": "!OptionsMenuToggle",
      "body": [
        "<OptionsMenuToggle",
				"\tparentId={${1:\"''\"}}",
				"\tonToggle={${2:(isOpen: boolean) => undefined as void}}",
				"\tisOpen={${3:false}}",
				"\tisPlain={${4:false}}",
				"\tisFocused={${5:false}}",
				"\tisHovered={${6:false}}",
				"\tisSplitButton={${7:false}}",
				"\tisActive={${8:false}}",
				"\tisDisabled={${9:false}}",
				"\thideCaret={${10:false}}",
				"\taria-label={${11:\"'Options menu'\"}}",
				"\tonEnter={${12:(event: React.MouseEvent<HTMLButtonElement>) => undefined as void}}",
				"\tparentRef={${13:document.body}}",
				"\ttoggleTemplate={${14:<div>ReactNode</div>}}",
				"/>"
      ],
      "description": "OptionsMenuToggle"
    }
  ,
	"OptionsMenuToggleWithText": 
    {
      "prefix": "!OptionsMenuToggleWithText",
      "body": [
        "<OptionsMenuToggleWithText",
				"\tparentId={${1:\"''\"}}",
				"\ttoggleText={${2:<div>ReactNode</div>}}",
				"\ttoggleTextClassName={${3:\"''\"}}",
				"\ttoggleButtonContents={${4:<div>ReactNode</div>}}",
				"\ttoggleButtonContentsClassName={${5:\"''\"}}",
				"\tonToggle={${6:() => null as any}}",
				"\tonEnter={${7:(event: React.MouseEvent<HTMLButtonElement>) => undefined as void}}",
				"\tisOpen={${8:false}}",
				"\tisPlain={${9:false}}",
				"\tisFocused={${10:false}}",
				"\tisHovered={${11:false}}",
				"\tisActive={${12:false}}",
				"\tisDisabled={${13:false}}",
				"\tparentRef={${14:document.body}}",
				"\tariaHasPopup={${15:true}}",
				"\taria-label={${16:\"'Options menu'\"}}",
				"/>"
      ],
      "description": "OptionsMenuToggleWithText"
    }
  ,
	"Page": 
    {
      "prefix": "!Page",
      "body": [
        "<Page",
				"\tclassName={${1:\"''\"}}",
				"\theader={${2:null}}",
				"\tsidebar={${3:null}}",
				"\tskipToContent={${4:null}}",
				"\tmainContainerId={${5:\"null\"}}",
				"\tisManagedSidebar={${6:false}}",
				"\tdefaultManagedSidebarIsOpen={${7:true}}",
				"\tonPageResize={${8:(): void => null}}",
				"\tbreadcrumb={${9:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Page>"
      ],
      "description": "Page"
    }
  ,
	"PageHeader": 
    {
      "prefix": "!PageHeader",
      "body": [
        "<PageHeader",
				"\tclassName={${1:\"''\"}}",
				"\tlogo={${2:null}}",
				"\tlogoProps={${3:null}}",
				"\tlogoComponent={${4:'a'}}",
				"\ttoolbar={${5:null}}",
				"\tavatar={${6:null}}",
				"\ttopNav={${7:null}}",
				"\tshowNavToggle={${8:false}}",
				"\tisNavOpen={${9:true}}",
				"\tisManagedSidebar={${10:true}}",
				"\tonNavToggle={${11:() => undefined as any}}",
				"\taria-label={${12:\"'Global navigation'\"}}",
				"/>"
      ],
      "description": "PageHeader"
    }
  ,
	"PageSection": 
    {
      "prefix": "!PageSection",
      "body": [
        "<PageSection",
				"\tclassName={${1:\"''\"}}",
				"\tvariant={${2:'default'}}",
				"\ttype={${3:'default'}}",
				"\tisFilled={${4:true}}",
				"\tnoPadding={${5:false}}",
				"\tnoPaddingMobile={${6:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</PageSection>"
      ],
      "description": "PageSection"
    }
  ,
	"PageSidebar": 
    {
      "prefix": "!PageSidebar",
      "body": [
        "<PageSidebar",
				"\tclassName={${1:\"''\"}}",
				"\tnav={${2:<div>ReactNode</div>}}",
				"\tisManagedSidebar={${3:true}}",
				"\tisNavOpen={${4:true}}",
				"\ttheme={${5:'light'}}",
				"/>"
      ],
      "description": "PageSidebar"
    }
  ,
	"Navigation": 
    {
      "prefix": "!Navigation",
      "body": [
        "<Navigation",
				"\tclassName={${1:\"''\"}}",
				"\tisDisabled={${2:false}}",
				"\tisCompact={${3:false}}",
				"\tlastPage={${4:0}}",
				"\tfirstPage={${5:0}}",
				"\tpagesTitle={${6:\"''\"}}",
				"\ttoLastPage={${7:\"'Go to last page'\"}}",
				"\ttoPreviousPage={${8:\"'Go to previous page'\"}}",
				"\ttoNextPage={${9:\"'Go to next page'\"}}",
				"\ttoFirstPage={${10:\"'Go to first page'\"}}",
				"\tcurrPage={${11:\"'Current page'\"}}",
				"\tpaginationTitle={${12:\"'Pagination'\"}}",
				"\tpage={${13:42}}",
				"\tonSetPage={${14:(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => undefined as void}}",
				"\tonNextClick={${15:() => undefined as any}}",
				"\tonPreviousClick={${16:() => undefined as any}}",
				"\tonFirstClick={${17:() => undefined as any}}",
				"\tonLastClick={${18:() => undefined as any}}",
				"\tonPageInput={${19:() => undefined as any}}",
				"/>"
      ],
      "description": "Navigation"
    }
  ,
	"OptionsToggle": 
    {
      "prefix": "!OptionsToggle",
      "body": [
        "<OptionsToggle",
				"\titemsTitle={${1:\"'items'\"}}",
				"\toptionsToggle={${2:\"'Select'\"}}",
				"\titemsPerPageTitle={${3:\"'Items per page'\"}}",
				"\tfirstIndex={${4:0}}",
				"\tlastIndex={${5:0}}",
				"\titemCount={${6:0}}",
				"\twidgetId={${7:\"''\"}}",
				"\tshowToggle={${8:true}}",
				"\tonToggle={${9:(_isOpen: boolean) => undefined as any}}",
				"\tisOpen={${10:false}}",
				"\tisDisabled={${11:false}}",
				"\tparentRef={${12:null}}",
				"\ttoggleTemplate={${13:''}}",
				"\tonEnter={${14:null}}",
				"/>"
      ],
      "description": "OptionsToggle"
    }
  ,
	"Pagination": 
    {
      "prefix": "!Pagination",
      "body": [
        "<Pagination",
				"\tclassName={${1:\"''\"}}",
				"\titemCount={${2:42}}",
				"\tvariant={${3:'top'}}",
				"\tisDisabled={${4:false}}",
				"\tisCompact={${5:false}}",
				"\tperPage={${6:42}}",
				"\tperPageOptions={${7:[",
				"  {",
				"    title: '10',",
				"    value: 10",
				"  },",
				"  {",
				"    title: '20',",
				"    value: 20",
				"  },",
				"  {",
				"    title: '50',",
				"    value: 50",
				"  },",
				"  {",
				"    title: '100',",
				"    value: 100",
				"  }",
				"]}}",
				"\tfirstPage={${8:1}}",
				"\tpage={${9:1}}",
				"\titemsStart={${10:null}}",
				"\titemsEnd={${11:null}}",
				"\twidgetId={${12:\"'pagination-options-menu'\"}}",
				"\tdropDirection={${13:'up'}}",
				"\ttitles={${14:undefined}}",
				"\ttoggleTemplate={${15:'string'}}",
				"\tonSetPage={${16:() => undefined}}",
				"\tonFirstClick={${17:() => undefined}}",
				"\tonPreviousClick={${18:() => undefined}}",
				"\tonNextClick={${19:() => undefined}}",
				"\tonLastClick={${20:() => undefined}}",
				"\tonPageInput={${21:() => undefined}}",
				"\tonPerPageSelect={${22:() => undefined}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Pagination>"
      ],
      "description": "Pagination"
    }
  ,
	"PaginationOptionsMenu": 
    {
      "prefix": "!PaginationOptionsMenu",
      "body": [
        "<PaginationOptionsMenu",
				"\tclassName={${1:\"''\"}}",
				"\twidgetId={${2:\"''\"}}",
				"\tisDisabled={${3:false}}",
				"\tdropDirection={${4:'up'}}",
				"\tperPageOptions={${5:[]}}",
				"\titemsPerPageTitle={${6:\"'Items per page'\"}}",
				"\tperPageSuffix={${7:\"'per page'\"}}",
				"\titemsTitle={${8:\"'items'\"}}",
				"\toptionsToggle={${9:\"'Select'\"}}",
				"\titemCount={${10:0}}",
				"\tfirstIndex={${11:0}}",
				"\tlastIndex={${12:0}}",
				"\tperPage={${13:0}}",
				"\ttoggleTemplate={${14:({ firstIndex, lastIndex, itemCount, itemsTitle }: ToggleTemplateProps) => (",
				"  <React.Fragment>",
				"    <b>",
				"      {firstIndex} - {lastIndex}",
				"    </b>{' '}",
				"    of<b>{itemCount}</b> {itemsTitle}",
				"  </React.Fragment>",
				")}}",
				"\tonPerPageSelect={${15:() => null as any}}",
				"/>"
      ],
      "description": "PaginationOptionsMenu"
    }
  ,
	"ToggleTemplate": 
    {
      "prefix": "!ToggleTemplate",
      "body": [
        "<ToggleTemplate",
				"\tfirstIndex={${1:0}}",
				"\tlastIndex={${2:0}}",
				"\titemCount={${3:0}}",
				"\titemsTitle={${4:\"'items'\"}}",
				"/>"
      ],
      "description": "ToggleTemplate"
    }
  ,
	"Popover": 
    {
      "prefix": "!Popover",
      "body": [
        "<Popover",
				"\taria-label={${1:\"''\"}}",
				"\tappendTo={${2:() => document.body}}",
				"\tbodyContent={${3:<div>ReactNode</div>}}",
				"\tboundary={${4:'window'}}",
				"\tclassName={${5:\"''\"}}",
				"\tcloseBtnAriaLabel={${6:\"'Close'\"}}",
				"\tdistance={${7:25}}",
				"\tenableFlip={${8:true}}",
				"\tflipBehavior={${9:['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom']}}",
				"\tfooterContent={${10:null}}",
				"\theaderContent={${11:null}}",
				"\thideOnOutsideClick={${12:true}}",
				"\tisVisible={${13:null}}",
				"\tmaxWidth={${14:\"string\"}}",
				"\tonHidden={${15:(): void => null}}",
				"\tonHide={${16:(): void => null}}",
				"\tonMount={${17:(): void => null}}",
				"\tonShow={${18:(): void => null}}",
				"\tonShown={${19:(): void => null}}",
				"\tposition={${20:'top'}}",
				"\tshouldClose={${21:(): void => null}}",
				"\tzIndex={${22:9999}}",
				"\ttippyProps={${23:undefined}}",
				">",
				"\t{${0:<p>ReactElement</p>}}",
				"</Popover>"
      ],
      "description": "Popover"
    }
  ,
	"PopoverBody": 
    {
      "prefix": "!PopoverBody",
      "body": [
        "<PopoverBody",
				"",
				"/>"
      ],
      "description": "PopoverBody"
    }
  ,
	"PopoverHeader": 
    {
      "prefix": "!PopoverHeader",
      "body": [
        "<PopoverHeader",
				"",
				"/>"
      ],
      "description": "PopoverHeader"
    }
  ,
	"Progress": 
    {
      "prefix": "!Progress",
      "body": [
        "<Progress",
				"\tclassName={${1:\"''\"}}",
				"\tsize={${2:null}}",
				"\tmeasureLocation={${3:'outside'}}",
				"\tvariant={${4:'danger'}}",
				"\ttitle={${5:\"''\"}}",
				"\tlabel={${6:null}}",
				"\tvalue={${7:0}}",
				"\tid={${8:\"''\"}}",
				"\tmin={${9:0}}",
				"\tmax={${10:100}}",
				"\tvalueText={${11:\"null\"}}",
				"/>"
      ],
      "description": "Progress"
    }
  ,
	"ProgressBar": 
    {
      "prefix": "!ProgressBar",
      "body": [
        "<ProgressBar",
				"\tclassName={${1:\"''\"}}",
				"\tvalue={${2:42}}",
				"\tariaProps={${3:{}/*unrecognizedType AriaProps undefined*/}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ProgressBar>"
      ],
      "description": "ProgressBar"
    }
  ,
	"ProgressContainer": 
    {
      "prefix": "!ProgressContainer",
      "body": [
        "<ProgressContainer",
				"\tariaProps={${1:{}/*unrecognizedType AriaProps undefined*/}}",
				"\tparentId={${2:\"string\"}}",
				"\ttitle={${3:\"''\"}}",
				"\tlabel={${4:null}}",
				"\tvariant={${5:'danger'}}",
				"\tmeasureLocation={${6:'outside'}}",
				"\tvalue={${7:42}}",
				"/>"
      ],
      "description": "ProgressContainer"
    }
  ,
	"Radio": 
    {
      "prefix": "!Radio",
      "body": [
        "<Radio",
				"\tclassName={${1:\"''\"}}",
				"\tid={${2:\"string\"}}",
				"\tisLabelWrapped={${3:true}}",
				"\tisLabelBeforeButton={${4:true}}",
				"\tchecked={${5:true}}",
				"\tisChecked={${6:true}}",
				"\tisDisabled={${7:false}}",
				"\tisValid={${8:true}}",
				"\tlabel={${9:<div>ReactNode</div>}}",
				"\tname={${10:\"string\"}}",
				"\tonChange={${11:(checked: boolean, event: React.FormEvent<HTMLInputElement>) => undefined as void}}",
				"\taria-label={${12:\"string\"}}",
				"/>"
      ],
      "description": "Radio"
    }
  ,
	"CheckboxSelectGroup": 
    {
      "prefix": "!CheckboxSelectGroup",
      "body": [
        "<CheckboxSelectGroup",
				"\tclassName={${1:\"''\"}}",
				"\tlabel={${2:\"''\"}}",
				"\ttitleId={${3:\"''\"}}",
				">",
				"\t{${0:[]}}",
				"</CheckboxSelectGroup>"
      ],
      "description": "CheckboxSelectGroup"
    }
  ,
	"CheckboxSelectOption": 
    {
      "prefix": "!CheckboxSelectOption",
      "body": [
        "<CheckboxSelectOption",
				"\tclassName={${1:\"''\"}}",
				"\tindex={${2:0}}",
				"\tvalue={${3:\"''\"}}",
				"\tisDisabled={${4:false}}",
				"\tisChecked={${5:false}}",
				"\tsendRef={${6:(ref: React.ReactNode, index: number) => undefined as void}}",
				"\tkeyHandler={${7:(index: number, position: string) => undefined as void}}",
				"\tonClick={${8:(event: React.MouseEvent | React.ChangeEvent) => undefined as void}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</CheckboxSelectOption>"
      ],
      "description": "CheckboxSelectOption"
    }
  ,
	"Select": 
    {
      "prefix": "!Select",
      "body": [
        "<Select",
				"\tclassName={${1:\"''\"}}",
				"\tdirection={${2:'up'}}",
				"\tisExpanded={${3:false}}",
				"\tisGrouped={${4:false}}",
				"\tisPlain={${5:false}}",
				"\tisDisabled={${6:false}}",
				"\tisCreatable={${7:false}}",
				"\tcreateText={${8:\"'Create'\"}}",
				"\tplaceholderText={${9:''}}",
				"\tnoResultsFoundText={${10:\"'No results found'\"}}",
				"\tselections={${11:''}}",
				"\ttoggleId={${12:\"null\"}}",
				"\taria-label={${13:\"''\"}}",
				"\tariaLabelledBy={${14:\"''\"}}",
				"\tariaLabelTypeAhead={${15:\"''\"}}",
				"\tariaLabelClear={${16:\"'Clear all'\"}}",
				"\tariaLabelToggle={${17:\"'Options menu'\"}}",
				"\tariaLabelRemove={${18:\"'Remove'\"}}",
				"\tonSelect={${19:(",
				"  event: React.MouseEvent | React.ChangeEvent,",
				"  value: string | SelectOptionObject,",
				"  isPlaceholder?: boolean",
				") => undefined as void}}",
				"\tonToggle={${20:(isExpanded: boolean) => undefined as void}}",
				"\tonClear={${21:(_e: React.MouseEvent) => undefined as void}}",
				"\tonFilter={${22:null}}",
				"\tonCreateOption={${23:(_newOptionValue: string) => undefined as void}}",
				"\tvariant={${24:'single'}}",
				"\twidth={${25:''}}",
				"\tmaxHeight={${26:'string'}}",
				"\ttoggleIcon={${27:null}}",
				"\tcustomContent={${28:null}}",
				">",
				"\t{${0:[]}}",
				"</Select>"
      ],
      "description": "Select"
    }
  ,
	"SelectGroup": 
    {
      "prefix": "!SelectGroup",
      "body": [
        "<SelectGroup",
				"\tclassName={${1:\"''\"}}",
				"\tlabel={${2:\"''\"}}",
				"\ttitleId={${3:\"''\"}}",
				">",
				"\t{${0:[]}}",
				"</SelectGroup>"
      ],
      "description": "SelectGroup"
    }
  ,
	"SelectMenu": 
    {
      "prefix": "!SelectMenu",
      "body": [
        "<SelectMenu",
				"\tisCustomContent={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				"\tisExpanded={${3:false}}",
				"\tisGrouped={${4:false}}",
				"\tselected={${5:''}}",
				"\tchecked={${6:[]}}",
				"\topenedOnEnter={${7:false}}",
				"\tmaxHeight={${8:''}}",
				"\tnoResultsFoundText={${9:\"string\"}}",
				"\tcreateText={${10:\"string\"}}",
				"\tsendRef={${11:(ref: React.ReactNode, index: number) => undefined as void}}",
				"\tkeyHandler={${12:(index: number, position: string) => undefined as void}}",
				">",
				"\t{${0:[undefined as React.ReactElement]}}",
				"</SelectMenu>"
      ],
      "description": "SelectMenu"
    }
  ,
	"SelectOption": 
    {
      "prefix": "!SelectOption",
      "body": [
        "<SelectOption",
				"\tclassName={${1:\"''\"}}",
				"\tindex={${2:0}}",
				"\tcomponent={${3:'button'}}",
				"\tvalue={${4:''}}",
				"\tisDisabled={${5:false}}",
				"\tisPlaceholder={${6:false}}",
				"\tisSelected={${7:false}}",
				"\tisChecked={${8:false}}",
				"\tisFocused={${9:false}}",
				"\tsendRef={${10:(ref: React.ReactNode, index: number) => undefined as void}}",
				"\tkeyHandler={${11:(index: number, position: string) => undefined as void}}",
				"\tonClick={${12:(event: React.MouseEvent | React.ChangeEvent) => undefined as void}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</SelectOption>"
      ],
      "description": "SelectOption"
    }
  ,
	"SelectToggle": 
    {
      "prefix": "!SelectToggle",
      "body": [
        "<SelectToggle",
				"\tid={${1:\"string\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tisExpanded={${3:false}}",
				"\tonToggle={${4:(isExpanded: boolean) => undefined as void}}",
				"\tonEnter={${5:() => undefined as void}}",
				"\tonClose={${6:() => undefined as void}}",
				"\thandleTypeaheadKeys={${7:(position: string) => undefined as void}}",
				"\tparentRef={${8:{ current: document.createElement('div') }}}",
				"\tisFocused={${9:false}}",
				"\tisHovered={${10:false}}",
				"\tisActive={${11:false}}",
				"\tisPlain={${12:false}}",
				"\tisDisabled={${13:false}}",
				"\ttype={${14:'button'}}",
				"\tariaLabelledBy={${15:\"''\"}}",
				"\tariaLabelToggle={${16:\"''\"}}",
				"\tvariant={${17:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</SelectToggle>"
      ],
      "description": "SelectToggle"
    }
  ,
	"SkipToContent": 
    {
      "prefix": "!SkipToContent",
      "body": [
        "<SkipToContent",
				"\tcomponent={${1:'a'}}",
				"\thref={${2:\"string\"}}",
				"\tclassName={${3:\"''\"}}",
				"\tshow={${4:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</SkipToContent>"
      ],
      "description": "SkipToContent"
    }
  ,
	"Switch": 
    {
      "prefix": "!Switch",
      "body": [
        "<Switch",
				"\tid={${1:\"''\"}}",
				"\tclassName={${2:\"''\"}}",
				"\tlabel={${3:\"''\"}}",
				"\tlabelOff={${4:\"''\"}}",
				"\tisChecked={${5:true}}",
				"\tisDisabled={${6:false}}",
				"\tonChange={${7:() => undefined as any}}",
				"\taria-label={${8:\"''\"}}",
				"/>"
      ],
      "description": "Switch"
    }
  ,
	"TabButton": 
    {
      "prefix": "!TabButton",
      "body": [
        "<TabButton",
				"\tclassName={${1:\"''\"}}",
				"\thref={${2:\"string\"}}",
				"\ttabContentRef={${3:{ current: document.createElement('div') }}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</TabButton>"
      ],
      "description": "TabButton"
    }
  ,
	"TabContent": 
    {
      "prefix": "!TabContent",
      "body": [
        "<TabContent",
				"",
				"/>"
      ],
      "description": "TabContent"
    }
  ,
	"Tabs": 
    {
      "prefix": "!Tabs",
      "body": [
        "<Tabs",
				"\tclassName={${1:\"''\"}}",
				"\tactiveKey={${2:0}}",
				"\tonSelect={${3:() => undefined as any}}",
				"\tid={${4:\"string\"}}",
				"\tisFilled={${5:false}}",
				"\tisSecondary={${6:false}}",
				"\tleftScrollAriaLabel={${7:\"'Scroll left'\"}}",
				"\trightScrollAriaLabel={${8:\"'Scroll right'\"}}",
				"\tvariant={${9:'div'}}",
				"\taria-label={${10:\"string\"}}",
				"\tmountOnEnter={${11:false}}",
				"\tunmountOnExit={${12:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Tabs>"
      ],
      "description": "Tabs"
    }
  ,
	"Text": 
    {
      "prefix": "!Text",
      "body": [
        "<Text",
				"\tcomponent={${1:'h1'}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Text>"
      ],
      "description": "Text"
    }
  ,
	"TextContent": 
    {
      "prefix": "!TextContent",
      "body": [
        "<TextContent",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</TextContent>"
      ],
      "description": "TextContent"
    }
  ,
	"TextList": 
    {
      "prefix": "!TextList",
      "body": [
        "<TextList",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'ul'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</TextList>"
      ],
      "description": "TextList"
    }
  ,
	"TextListItem": 
    {
      "prefix": "!TextListItem",
      "body": [
        "<TextListItem",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'li'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</TextListItem>"
      ],
      "description": "TextListItem"
    }
  ,
	"TextArea": 
    {
      "prefix": "!TextArea",
      "body": [
        "<TextArea",
				"\tclassName={${1:\"''\"}}",
				"\tisRequired={${2:false}}",
				"\tisValid={${3:true}}",
				"\tvalidated={${4:'default'}}",
				"\tvalue={${5:'string'}}",
				"\tonChange={${6:(value: string, event: React.ChangeEvent<HTMLTextAreaElement>) => undefined as void}}",
				"\tresizeOrientation={${7:'both'}}",
				"\taria-label={${8:\"null\"}}",
				"/>"
      ],
      "description": "TextArea"
    }
  ,
	"TextInput": 
    {
      "prefix": "!TextInput",
      "body": [
        "<TextInput",
				"\tclassName={${1:\"''\"}}",
				"\tisDisabled={${2:false}}",
				"\tisReadOnly={${3:false}}",
				"\tisRequired={${4:false}}",
				"\tisValid={${5:true}}",
				"\tvalidated={${6:'default'}}",
				"\tonChange={${7:(): any => undefined}}",
				"\ttype={${8:'text'}}",
				"\tvalue={${9:'string'}}",
				"\taria-label={${10:\"null\"}}",
				"/>"
      ],
      "description": "TextInput"
    }
  ,
	"Title": 
    {
      "prefix": "!Title",
      "body": [
        "<Title",
				"\tsize={${1:{}/*unrecognizedType unknown undefined*/}}",
				"\tclassName={${2:\"''\"}}",
				"\theadingLevel={${3:'h1'}}",
				">",
				"\t{${0:''}}",
				"</Title>"
      ],
      "description": "Title"
    }
  ,
	"Tooltip": 
    {
      "prefix": "!Tooltip",
      "body": [
        "<Tooltip",
				"\tappendTo={${1:() => document.body}}",
				"\taria={${2:'describedby'}}",
				"\tboundary={${3:'window'}}",
				"\tclassName={${4:\"''\"}}",
				"\tcontent={${5:<div>ReactNode</div>}}",
				"\tdistance={${6:15}}",
				"\tenableFlip={${7:true}}",
				"\tentryDelay={${8:500}}",
				"\texitDelay={${9:500}}",
				"\tflipBehavior={${10:['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom']}}",
				"\tisAppLauncher={${11:false}}",
				"\tmaxWidth={${12:\"string\"}}",
				"\tposition={${13:'top'}}",
				"\ttrigger={${14:\"'mouseenter focus'\"}}",
				"\tisContentLeftAligned={${15:false}}",
				"\tisVisible={${16:false}}",
				"\tzIndex={${17:9999}}",
				"\ttippyProps={${18:undefined}}",
				"\tid={${19:\"''\"}}",
				">",
				"\t{${0:<p>ReactElement</p>}}",
				"</Tooltip>"
      ],
      "description": "Tooltip"
    }
  ,
	"TooltipArrow": 
    {
      "prefix": "!TooltipArrow",
      "body": [
        "<TooltipArrow",
				"\tclassName={${1:\"string\"}}",
				"/>"
      ],
      "description": "TooltipArrow"
    }
  ,
	"TooltipContent": 
    {
      "prefix": "!TooltipContent",
      "body": [
        "<TooltipContent",
				"\tclassName={${1:\"string\"}}",
				"\tisLeftAligned={${2:true}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</TooltipContent>"
      ],
      "description": "TooltipContent"
    }
  ,
	"Wizard": 
    {
      "prefix": "!Wizard",
      "body": [
        "<Wizard",
				"\tisOpen={${1:false}}",
				"\tisInPage={${2:false}}",
				"\tisCompactNav={${3:false}}",
				"\tisFullHeight={${4:false}}",
				"\tisFullWidth={${5:false}}",
				"\twidth={${6:null}}",
				"\theight={${7:null}}",
				"\ttitle={${8:\"''\"}}",
				"\tdescription={${9:\"''\"}}",
				"\tonClose={${10:() => undefined as any}}",
				"\tonGoToStep={${11:null}}",
				"\tclassName={${12:\"''\"}}",
				"\tsteps={${13:[]}}",
				"\tstartAtStep={${14:1}}",
				"\tariaLabelNav={${15:\"'Steps'\"}}",
				"\thasBodyPadding={${16:true}}",
				"\tfooter={${17:null}}",
				"\tonSave={${18:() => undefined as void}}",
				"\tonNext={${19:null}}",
				"\tonBack={${20:null}}",
				"\tnextButtonText={${21:\"'Next'\"}}",
				"\tbackButtonText={${22:\"'Back'\"}}",
				"\tcancelButtonText={${23:\"'Cancel'\"}}",
				"\tariaLabelCloseButton={${24:\"'Close'\"}}",
				"\tappendTo={${25:null}}",
				"/>"
      ],
      "description": "Wizard"
    }
  ,
	"WizardFooter": 
    {
      "prefix": "!WizardFooter",
      "body": [
        "<WizardFooter",
				"",
				">",
				"\t{${0:'any'}}",
				"</WizardFooter>"
      ],
      "description": "WizardFooter"
    }
  ,
	"WizardFooterInternal": 
    {
      "prefix": "!WizardFooterInternal",
      "body": [
        "<WizardFooterInternal",
				"",
				"/>"
      ],
      "description": "WizardFooterInternal"
    }
  ,
	"WizardHeader": 
    {
      "prefix": "!WizardHeader",
      "body": [
        "<WizardHeader",
				"\tonClose={${1:() => undefined}}",
				"\ttitle={${2:\"string\"}}",
				"\tdescription={${3:\"string\"}}",
				"\tariaLabelCloseButton={${4:\"string\"}}",
				"\ttitleId={${5:\"string\"}}",
				"\tdescriptionId={${6:\"string\"}}",
				"/>"
      ],
      "description": "WizardHeader"
    }
  ,
	"WizardNav": 
    {
      "prefix": "!WizardNav",
      "body": [
        "<WizardNav",
				"\tariaLabel={${1:\"string\"}}",
				"\tisOpen={${2:false}}",
				"\treturnList={${3:false}}",
				">",
				"\t{${0:'any'}}",
				"</WizardNav>"
      ],
      "description": "WizardNav"
    }
  ,
	"WizardNavItem": 
    {
      "prefix": "!WizardNavItem",
      "body": [
        "<WizardNavItem",
				"\ttext={${1:\"''\"}}",
				"\tisCurrent={${2:false}}",
				"\tisDisabled={${3:false}}",
				"\tstep={${4:42}}",
				"\tonNavItemClick={${5:() => undefined}}",
				"\tnavItemComponent={${6:'a'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</WizardNavItem>"
      ],
      "description": "WizardNavItem"
    }
  ,
	"WizardToggle": 
    {
      "prefix": "!WizardToggle",
      "body": [
        "<WizardToggle",
				"\tnav={${1:'any'}}",
				"\tsteps={${2:[]}}",
				"\tactiveStep={${3:{}/*unrecognizedType WizardStep undefined*/}}",
				"\thasBodyPadding={${4:true}}",
				"\tisNavOpen={${5:true}}",
				"\tonNavToggle={${6:(isOpen: boolean) => undefined as void}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</WizardToggle>"
      ],
      "description": "WizardToggle"
    }
  ,
	"DataToolbar": 
    {
      "prefix": "!DataToolbar",
      "body": [
        "<DataToolbar",
				"\tclearAllFilters={${1:() => undefined as void}}",
				"\tclearFiltersButtonText={${2:\"string\"}}",
				"\tcollapseListedFiltersBreakpoint={${3:'md'}}",
				"\tisExpanded={${4:true}}",
				"\ttoggleIsExpanded={${5:() => undefined as void}}",
				"\tclassName={${6:\"string\"}}",
				"\tid={${7:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataToolbar>"
      ],
      "description": "DataToolbar"
    }
  ,
	"DataToolbarChipGroupContent": 
    {
      "prefix": "!DataToolbarChipGroupContent",
      "body": [
        "<DataToolbarChipGroupContent",
				"\tclassName={${1:\"string\"}}",
				"\tisExpanded={${2:true}}",
				"\tchipGroupContentRef={${3:{ current: document.createElement('div') }}}",
				"\tclearAllFilters={${4:() => undefined as void}}",
				"\tshowClearFiltersButton={${5:true}}",
				"\tclearFiltersButtonText={${6:\"'Clear all filters'\"}}",
				"\tnumberOfFilters={${7:42}}",
				"\tcollapseListedFiltersBreakpoint={${8:'lg'}}",
				"/>"
      ],
      "description": "DataToolbarChipGroupContent"
    }
  ,
	"DataToolbarContent": 
    {
      "prefix": "!DataToolbarContent",
      "body": [
        "<DataToolbarContent",
				"\tclassName={${1:\"string\"}}",
				"\tbreakpointMods={${2:[]}}",
				"\tisExpanded={${3:false}}",
				"\tclearAllFilters={${4:() => undefined as void}}",
				"\tshowClearFiltersButton={${5:false}}",
				"\tclearFiltersButtonText={${6:\"string\"}}",
				"\ttoolbarId={${7:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataToolbarContent>"
      ],
      "description": "DataToolbarContent"
    }
  ,
	"DataToolbarExpandableContent": 
    {
      "prefix": "!DataToolbarExpandableContent",
      "body": [
        "<DataToolbarExpandableContent",
				"\tclassName={${1:\"string\"}}",
				"\tisExpanded={${2:false}}",
				"\texpandableContentRef={${3:{ current: document.createElement('div') }}}",
				"\tchipContainerRef={${4:{ current: document.createElement('div') }}}",
				"\tclearAllFilters={${5:() => undefined as void}}",
				"\tclearFiltersButtonText={${6:\"'Clear all filters'\"}}",
				"\tshowClearFiltersButton={${7:true}}",
				"/>"
      ],
      "description": "DataToolbarExpandableContent"
    }
  ,
	"DataToolbarFilter": 
    {
      "prefix": "!DataToolbarFilter",
      "body": [
        "<DataToolbarFilter",
				"\tchips={${1:[]}}",
				"\tdeleteChip={${2:(category: string, chip: DataToolbarChip | string) => undefined as void}}",
				"\tcategoryName={${3:\"string\"}}",
				"\tshowToolbarItem={${4:true}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataToolbarFilter>"
      ],
      "description": "DataToolbarFilter"
    }
  ,
	"DataToolbarGroup": 
    {
      "prefix": "!DataToolbarGroup",
      "body": [
        "<DataToolbarGroup",
				"\tclassName={${1:\"string\"}}",
				"\tvariant={${2:'filter-group'}}",
				"\tbreakpointMods={${3:[]}}",
				"\tinnerRef={${4:{ current: document.createElement('div') }}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataToolbarGroup>"
      ],
      "description": "DataToolbarGroup"
    }
  ,
	"DataToolbarItem": 
    {
      "prefix": "!DataToolbarItem",
      "body": [
        "<DataToolbarItem",
				"\tclassName={${1:\"string\"}}",
				"\tvariant={${2:'separator'}}",
				"\tbreakpointMods={${3:[]}}",
				"\tid={${4:\"string\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DataToolbarItem>"
      ],
      "description": "DataToolbarItem"
    }
  ,
	"Divider": 
    {
      "prefix": "!Divider",
      "body": [
        "<Divider",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'hr'}}",
				"/>"
      ],
      "description": "Divider"
    }
  ,
	"Drawer": 
    {
      "prefix": "!Drawer",
      "body": [
        "<Drawer",
				"\tclassName={${1:\"''\"}}",
				"\tisExpanded={${2:false}}",
				"\tisInline={${3:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</Drawer>"
      ],
      "description": "Drawer"
    }
  ,
	"DrawerContent": 
    {
      "prefix": "!DrawerContent",
      "body": [
        "<DrawerContent",
				"\tclassName={${1:\"''\"}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DrawerContent>"
      ],
      "description": "DrawerContent"
    }
  ,
	"DrawerPanelContent": 
    {
      "prefix": "!DrawerPanelContent",
      "body": [
        "<DrawerPanelContent",
				"\tclassName={${1:\"''\"}}",
				"\tnoPadding={${2:false}}",
				">",
				"\t{${0:<div>ReactNode</div>}}",
				"</DrawerPanelContent>"
      ],
      "description": "DrawerPanelContent"
    }
  ,
	"OverflowMenu": 
    {
      "prefix": "!OverflowMenu",
      "body": [
        "<OverflowMenu",
				"\tclassName={${1:\"string\"}}",
				"\tbreakpoint={${2:'md'}}",
				">",
				"\t{${0:'any'}}",
				"</OverflowMenu>"
      ],
      "description": "OverflowMenu"
    }
  ,
	"OverflowMenuContent": 
    {
      "prefix": "!OverflowMenuContent",
      "body": [
        "<OverflowMenuContent",
				"",
				"/>"
      ],
      "description": "OverflowMenuContent"
    }
  ,
	"OverflowMenuControl": 
    {
      "prefix": "!OverflowMenuControl",
      "body": [
        "<OverflowMenuControl",
				"",
				"/>"
      ],
      "description": "OverflowMenuControl"
    }
  ,
	"Bullseye": 
    {
      "prefix": "!Bullseye",
      "body": [
        "<Bullseye",
				"\tclassName={${1:\"''\"}}",
				"\tcomponent={${2:'div'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Bullseye>"
      ],
      "description": "Bullseye"
    }
  ,
	"Flex": 
    {
      "prefix": "!Flex",
      "body": [
        "<Flex",
				"\tclassName={${1:\"''\"}}",
				"\tbreakpointMods={${2:[]}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Flex>"
      ],
      "description": "Flex"
    }
  ,
	"FlexItem": 
    {
      "prefix": "!FlexItem",
      "body": [
        "<FlexItem",
				"\tclassName={${1:\"''\"}}",
				"\tbreakpointMods={${2:[]}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</FlexItem>"
      ],
      "description": "FlexItem"
    }
  ,
	"Gallery": 
    {
      "prefix": "!Gallery",
      "body": [
        "<Gallery",
				"\tclassName={${1:\"''\"}}",
				"\tgutter={${2:null}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Gallery>"
      ],
      "description": "Gallery"
    }
  ,
	"GalleryItem": 
    {
      "prefix": "!GalleryItem",
      "body": [
        "<GalleryItem",
				"",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</GalleryItem>"
      ],
      "description": "GalleryItem"
    }
  ,
	"Grid": 
    {
      "prefix": "!Grid",
      "body": [
        "<Grid",
				"\tclassName={${1:\"''\"}}",
				"\tgutter={${2:null}}",
				"\tspan={${3:null}}",
				"\tsm={${4:1}}",
				"\tmd={${5:1}}",
				"\tlg={${6:1}}",
				"\txl={${7:1}}",
				"\txl2={${8:1}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Grid>"
      ],
      "description": "Grid"
    }
  ,
	"GridItem": 
    {
      "prefix": "!GridItem",
      "body": [
        "<GridItem",
				"\tclassName={${1:\"''\"}}",
				"\tspan={${2:null}}",
				"\trowSpan={${3:null}}",
				"\toffset={${4:null}}",
				"\tsm={${5:1}}",
				"\tsmRowSpan={${6:1}}",
				"\tsmOffset={${7:1}}",
				"\tmd={${8:1}}",
				"\tmdRowSpan={${9:1}}",
				"\tmdOffset={${10:1}}",
				"\tlg={${11:1}}",
				"\tlgRowSpan={${12:1}}",
				"\tlgOffset={${13:1}}",
				"\txl={${14:1}}",
				"\txlRowSpan={${15:1}}",
				"\txlOffset={${16:1}}",
				"\txl2={${17:1}}",
				"\txl2RowSpan={${18:1}}",
				"\txl2Offset={${19:1}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</GridItem>"
      ],
      "description": "GridItem"
    }
  ,
	"Level": 
    {
      "prefix": "!Level",
      "body": [
        "<Level",
				"\tgutter={${1:null}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Level>"
      ],
      "description": "Level"
    }
  ,
	"LevelItem": 
    {
      "prefix": "!LevelItem",
      "body": [
        "<LevelItem",
				"",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</LevelItem>"
      ],
      "description": "LevelItem"
    }
  ,
	"Split": 
    {
      "prefix": "!Split",
      "body": [
        "<Split",
				"\tgutter={${1:null}}",
				"\tclassName={${2:\"''\"}}",
				"\tcomponent={${3:'div'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Split>"
      ],
      "description": "Split"
    }
  ,
	"SplitItem": 
    {
      "prefix": "!SplitItem",
      "body": [
        "<SplitItem",
				"\tisFilled={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</SplitItem>"
      ],
      "description": "SplitItem"
    }
  ,
	"Stack": 
    {
      "prefix": "!Stack",
      "body": [
        "<Stack",
				"\tgutter={${1:null}}",
				"\tclassName={${2:\"''\"}}",
				"\tcomponent={${3:'div'}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Stack>"
      ],
      "description": "Stack"
    }
  ,
	"StackItem": 
    {
      "prefix": "!StackItem",
      "body": [
        "<StackItem",
				"\tisFilled={${1:false}}",
				"\tclassName={${2:\"''\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</StackItem>"
      ],
      "description": "StackItem"
    }
  ,
	"Toolbar": 
    {
      "prefix": "!Toolbar",
      "body": [
        "<Toolbar",
				"\tclassName={${1:\"null\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</Toolbar>"
      ],
      "description": "Toolbar"
    }
  ,
	"ToolbarGroup": 
    {
      "prefix": "!ToolbarGroup",
      "body": [
        "<ToolbarGroup",
				"\tclassName={${1:\"null\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ToolbarGroup>"
      ],
      "description": "ToolbarGroup"
    }
  ,
	"ToolbarItem": 
    {
      "prefix": "!ToolbarItem",
      "body": [
        "<ToolbarItem",
				"\tclassName={${1:\"null\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ToolbarItem>"
      ],
      "description": "ToolbarItem"
    }
  ,
	"ToolbarSection": 
    {
      "prefix": "!ToolbarSection",
      "body": [
        "<ToolbarSection",
				"\tclassName={${1:\"null\"}}",
				"\taria-label={${2:\"string\"}}",
				">",
				"\t{${0:<>ReactNode</>}}",
				"</ToolbarSection>"
      ],
      "description": "ToolbarSection"
    }
}